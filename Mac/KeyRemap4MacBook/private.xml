<?xml version="1.0"?>
<!--
 KeyRemap4MacBook private.xml (http://pqrs.org/macosx/keyremap4macbook/)
 Author: Jaeho Shin <netj@sparcs.org>
 Created: 2012-08-04
 -->
<root>
    <item>
        <name>In Terminal, Change left Command key to Option except some common Mac key combos</name>
        <identifier>private.terminal_commandL_to_optionL</identifier>
        <only>TERMINAL</only>
        <!-- pass-through some common Mac keys -->
        <autogen>__KeyToKey__ KeyCode::TAB,       ModifierFlag::COMMAND_L|ModifierFlag::NONE,          KeyCode::TAB,       ModifierFlag::COMMAND_L</autogen>
        <autogen>__KeyToKey__ KeyCode::BACKQUOTE, ModifierFlag::COMMAND_L|ModifierFlag::NONE,          KeyCode::BACKQUOTE, ModifierFlag::COMMAND_L</autogen>
        <autogen>__KeyToKey__ KeyCode::TAB,       ModifierFlag::COMMAND_L|VK_SHIFT|ModifierFlag::NONE, KeyCode::TAB,       ModifierFlag::COMMAND_L|VK_SHIFT</autogen>
        <autogen>__KeyToKey__ KeyCode::BACKQUOTE, ModifierFlag::COMMAND_L|VK_SHIFT|ModifierFlag::NONE, KeyCode::BACKQUOTE, ModifierFlag::COMMAND_L|VK_SHIFT</autogen>
        <autogen>__KeyToKey__ KeyCode::M,         ModifierFlag::COMMAND_L|ModifierFlag::NONE,          KeyCode::M,         ModifierFlag::COMMAND_L</autogen>
        <autogen>__KeyToKey__ KeyCode::N,         ModifierFlag::COMMAND_L,                             KeyCode::N,         ModifierFlag::COMMAND_L</autogen>
        <autogen>__KeyToKey__ KeyCode::W,         ModifierFlag::COMMAND_L,                             KeyCode::W,         ModifierFlag::COMMAND_L</autogen>
        <autogen>__KeyToKey__ KeyCode::C,         ModifierFlag::COMMAND_L|ModifierFlag::NONE,          KeyCode::C,         ModifierFlag::COMMAND_L</autogen>
        <autogen>__KeyToKey__ KeyCode::V,         ModifierFlag::COMMAND_L,                             KeyCode::V,         ModifierFlag::COMMAND_L</autogen>
        <autogen>__KeyToKey__ KeyCode::SPACE,     ModifierFlag::COMMAND_L,                             KeyCode::SPACE,     ModifierFlag::COMMAND_L</autogen>
        <autogen>__KeyToKey__ KeyCode::COMMA,     ModifierFlag::COMMAND_L,                             KeyCode::COMMA,     ModifierFlag::COMMAND_L</autogen>
        <!-- pass-through zoom font size, clear buffer -->
        <autogen>__KeyToKey__ KeyCode::MINUS, ModifierFlag::COMMAND_L, KeyCode::MINUS, ModifierFlag::COMMAND_L</autogen>
        <autogen>__KeyToKey__ KeyCode::EQUAL, ModifierFlag::COMMAND_L, KeyCode::EQUAL, ModifierFlag::COMMAND_L</autogen>
        <autogen>__KeyToKey__ KeyCode::K,     ModifierFlag::COMMAND_L, KeyCode::K,     ModifierFlag::COMMAND_L</autogen>
        <!-- pass-through Afloat -->
        <autogen>__KeyToKey__ KeyCode::A, ModifierFlag::CONTROL_L|ModifierFlag::COMMAND_L|ModifierFlag::NONE,
        <!---->               KeyCode::A, ModifierFlag::CONTROL_L|ModifierFlag::COMMAND_L                     </autogen>
        <autogen>__KeyToKey__ KeyCode::F, ModifierFlag::CONTROL_L|VK_SHIFT|ModifierFlag::COMMAND_L|ModifierFlag::NONE,
        <!---->               KeyCode::F, ModifierFlag::CONTROL_L|VK_SHIFT|ModifierFlag::COMMAND_L                     </autogen>
        <!-- pass-through my TotalTerminal combos ⌃⌘⏎ ⌃⌘P -->
        <autogen>__KeyToKey__ KeyCode::RETURN, ModifierFlag::CONTROL_L|ModifierFlag::COMMAND_L|ModifierFlag::NONE,
        <!---->               KeyCode::RETURN, ModifierFlag::CONTROL_L|ModifierFlag::COMMAND_L </autogen>
        <autogen>__KeyToKey__ KeyCode::P, ModifierFlag::CONTROL_L|ModifierFlag::COMMAND_L|ModifierFlag::NONE,
        <!---->               KeyCode::P, ModifierFlag::CONTROL_L|ModifierFlag::COMMAND_L </autogen>
        <!-- change rest of keys with Command, Shift+Command, Control+Command, and Control+Shift+Command to Option -->
        <include path="wrap_most_keys.xml"><replacementdef><replacementname>BEFORE</replacementname> <replacementvalue>ModifierFlag::NONE|ModifierFlag::COMMAND_L                     </replacementvalue></replacementdef><replacementdef><replacementname>AFTER</replacementname> <replacementvalue>ModifierFlag::OPTION_L                                               </replacementvalue></replacementdef></include>
        <include path="wrap_most_keys.xml"><replacementdef><replacementname>BEFORE</replacementname> <replacementvalue>ModifierFlag::NONE|ModifierFlag::COMMAND_L|VK_SHIFT            </replacementvalue></replacementdef><replacementdef><replacementname>AFTER</replacementname> <replacementvalue>ModifierFlag::OPTION_L|ModifierFlag::SHIFT_L                         </replacementvalue></replacementdef></include>
        <include path="wrap_most_keys.xml"><replacementdef><replacementname>BEFORE</replacementname> <replacementvalue>ModifierFlag::NONE|ModifierFlag::COMMAND_L|VK_CONTROL          </replacementvalue></replacementdef><replacementdef><replacementname>AFTER</replacementname> <replacementvalue>ModifierFlag::OPTION_L|ModifierFlag::CONTROL_L                       </replacementvalue></replacementdef></include>
        <include path="wrap_most_keys.xml"><replacementdef><replacementname>BEFORE</replacementname> <replacementvalue>ModifierFlag::NONE|ModifierFlag::COMMAND_L|VK_CONTROL|VK_SHIFT </replacementvalue></replacementdef><replacementdef><replacementname>AFTER</replacementname> <replacementvalue>ModifierFlag::OPTION_L|ModifierFlag::CONTROL_L|ModifierFlag::SHIFT_L </replacementvalue></replacementdef></include>
    </item>

    <item>
        <name>For Korean input source, make Control and Option combos work just as if it were in English mode.  Normally, Option combos just enter Roman characters, and Control ones are disabled.</name>
        <identifier>private.korean_control_option_combos_workaround</identifier>
        <inputsource_only>KOREAN</inputsource_only>
        <!-- Control, Option key combos will be done in English -->
        <!-- XXX TODO gracefully handle Ctrl+x/Opt+x keys while character is in composition -->
        <autogen>__KeyToKey__ KeyCode::CONTROL_L, KeyCode::CONTROL_L,
        <!----> Option::KEYTOKEY_BEFORE_KEYDOWN,  KeyCode::VK_CHANGE_INPUTMODE_ENGLISH,
        <!----> Option::KEYTOKEY_AFTER_KEYUP,     KeyCode::VK_CHANGE_INPUTSOURCE_KOREAN </autogen>
        <autogen>__KeyToKey__ KeyCode::CONTROL_R, KeyCode::CONTROL_R,
        <!----> Option::KEYTOKEY_BEFORE_KEYDOWN,  KeyCode::VK_CHANGE_INPUTMODE_ENGLISH,
        <!----> Option::KEYTOKEY_AFTER_KEYUP,     KeyCode::VK_CHANGE_INPUTSOURCE_KOREAN </autogen>
        <autogen>__KeyToKey__ KeyCode::OPTION_L,  KeyCode::OPTION_L,
        <!----> Option::KEYTOKEY_BEFORE_KEYDOWN,  KeyCode::VK_CHANGE_INPUTMODE_ENGLISH,
        <!----> Option::KEYTOKEY_AFTER_KEYUP,     KeyCode::VK_CHANGE_INPUTSOURCE_KOREAN </autogen>
        <autogen>__KeyToKey__ KeyCode::OPTION_R,  KeyCode::OPTION_R,
        <!----> Option::KEYTOKEY_BEFORE_KEYDOWN,  KeyCode::VK_CHANGE_INPUTMODE_ENGLISH,
        <!----> Option::KEYTOKEY_AFTER_KEYUP,     KeyCode::VK_CHANGE_INPUTSOURCE_KOREAN </autogen>
        <!-- XXX It turns out to be very difficult to get COMMAND_L work just like OPTION_L only for Terminal,
             while still letting COMMAND-SPACE to switch input methods. - ->
        <block>
            <only>TERMINAL</only>
            <autogen>__KeyToKey__ KeyCode::SPACE, ModifierFlag::COMMAND_L,
                                                      KeyCode::VK_CHANGE_INPUTMODE_ENGLISH,
                    Option::KEYTOKEY_AFTER_KEYUP,     KeyCode::VK_CHANGE_INPUTMODE_ENGLISH </autogen>
            <autogen>__KeyToKey__ KeyCode::COMMAND_L, KeyCode::OPTION_R,
            <!- - > Option::KEYTOKEY_BEFORE_KEYDOWN,  KeyCode::VK_CHANGE_INPUTMODE_ENGLISH, KeyCode::SPACE, KeyCode::DELETE,
            <!- - > Option::KEYTOKEY_AFTER_KEYUP,     KeyCode::VK_CHANGE_INPUTSOURCE_KOREAN </autogen>
        </block>
        -->
    </item>

    <item>
        <name>In Vim, Make Escape key also Switch to English IM</name>
        <identifier>private.vim_esc_also_switches_to_english_inputmode</identifier>
        <only>VI</only>
        <inputsource_not>ENGLISH</inputsource_not>
        <autogen>__KeyToKey__ KeyCode::ESCAPE,
        <!---->               KeyCode::ESCAPE,KeyCode::VK_CHANGE_INPUTMODE_ENGLISH </autogen>
    </item>
</root>
