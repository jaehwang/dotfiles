# netj's .tmux.conf
# Author: Jaeho Shin <netj@sparcs.org>
# Created: 2010-12-26

# C-t as prefix
set-option -g prefix C-t
unbind C-t
bind C-t last-window
unbind t
bind t send-prefix
unbind C-b

# UTF-8
set-option -g status-utf8 on
set-window-option -g utf8 on

# status and title format
set-option -g set-titles-string "#T - #I:#W#F#S^#H"
set-option -g status-justify right
set-option -g status-left "#T"
set-option -g status-left-length 48
set-option -g status-right "#[fg=white,bright]#S#[default]^#H"
set-option -g status-right-length 16

# 256 color: XXX tmux should be launched with option -2.
set-option -g default-terminal "screen-256color"
# You can check 256 color support with this command:
#   curl http://www.frexx.de/xterm-256-notes/data/256colors2.pl | perl

# status colours
set-option -g status-bg black
set-option -g status-fg default # for compatibility with tmux < 1.6
set-option -g status-fg brightblack
set-option -g status-attr none
set-window-option -g window-status-fg brightblack
set-window-option -g window-status-attr none
set-option -g status-left-fg white
set-option -g status-left-attr bright
set-window-option -g window-status-current-fg white
set-window-option -g window-status-current-attr bright
set-window-option -g window-status-activity-fg green
set-window-option -g window-status-activity-attr none
set-window-option -g window-status-content-fg yellow
set-window-option -g window-status-content-attr none
set-window-option -g window-status-bell-fg red
set-window-option -g window-status-bell-attr none

# some more options
set-option -g base-index 1
set-option -g set-titles on
set-option -g display-time 2500
set-option -g history-limit 10000000
set-window-option -g monitor-activity on
set-window-option -g mode-keys vi
set-window-option -g clock-mode-style 24

# allow buffer scrolling also for xterm-likes
# See: https://bbs.archlinux.org/viewtopic.php?id=102217
set -g terminal-overrides 'xterm*:smcup@:rmcup@'


### Key Bindings

## Some easier ones GNU Screen style key bindings, which I'm pretty used to

# window
unbind ^C
bind ^C new-window
unbind c
bind c new-window

# session
unbind S
bind S new-session
unbind ^S
bind ^S switch-client -l

# break window into new session
unbind @
#bind @ command-prompt -I "1" -p "(break window to new-session)" "new-session -d -n'moving' -s'%1' 'sleep 1'; swap-window -t'%1:moving'; switch-client -t'%1:'"
bind @ split-window -d -h -l0 \
    'n=$(tmux list-sessions -F "#S" | grep "^[0-9]\\+$" | sort -nr | head -n 1); let n++; \
        tmux command-prompt -I "$n" -p "(break window into new session)" \
            "new-session -d -s\"%1\" -n moving \"sleep 1\"; swap-window -t\"%1:moving\"; switch-client -t\"%1:\""'

# detach
unbind ^D
bind ^D detach
# make this client the only one by detaching all other clients
unbind O
bind O attach-session -d

# next ^@ ^N sp n 
unbind ^N
bind ^N next-window
unbind n
bind n next-window
unbind C-Space
bind C-Space next-window

# prev ^H ^P p ^? 
unbind ^P
bind ^P previous-window
unbind p
bind p previous-window
unbind Space
bind Space previous-window

# windows ^W w 
unbind ^W
bind ^W choose-window

# redisplay ^L
unbind ^L
bind ^L refresh-client

# reload config
unbind ^R
bind ^R source ~/.tmux.conf

# record window
bind-key | pipe-pane -o 'cat >>~/tmux-#S.#I.#P.log'


## vim style key bindings

# move around panes with j and k, a bit like vim
unbind l
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# resize panes like vim
bind < resize-pane -L 1
bind > resize-pane -R 1
bind - resize-pane -D 1
bind + resize-pane -U 1


## key bindings compatible with my Emacs config
unbind Tab
bind Tab select-pane -t :.+
bind C-o select-pane -t :.-


# local config
source-file ~/.tmux_local
